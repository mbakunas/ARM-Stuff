name: TestInputs

# subscription scope deployment
env:
  #subscriptionId: ${{ secrets.SUB_SANDBOX_1 }}
  #azureRegion: East US 2
  templateFile: ./RgDeploy/main.bicep
  parametersFile: ./RgDeploy/main.parameters.jsonc

# Controls when the workflow will run
on:
  # Workflow can be triggered manually from the Actions tab
  workflow_dispatch:
    inputs:
      subscriptionId:
        description: 'Subscription ID to which to deploy the RG'
        required: true
      resourceGroupName:
        description: 'Resource Group Name'
        required: true
      azureRegion:
        description: 'Azure region where the RG will be deployed'
        required: true
      tags:
        description: 'Object of resource tags for the RG'
        required: false
      userName:
        description: 'The UPN of the user to assign the RBAC role'
        required: true

permissions:
  id-token: write             # required for OIDC login to Azure
  contents: read              # required for authenticated repos
  pull-requests: write        # required to write the PR comment

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # checkout the repository to the GitHub Actions runner
      - uses: actions/checkout@v3
      
      # log in to Azure using OpenID Connect
      - uses: Azure/login@v1
        name: Login to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ inputs.subscriptionId }}
      
      # look up the user's ID
      - name: Look up user id
        id: userid
        run: |
          output="$(az ad user show --id ${{ inputs.userName }} --query id --output tsv)"
          echo "::set-output name=objectid::$output"
            
      # Test inputs
      - name: Test inputs
        id: inputs
        run: |
          echo Subscroption ID ${{ inputs.subscriptionId }}
          echo Resource group name ${{ inputs.resourceGroupName }}
          echo Azure region ${{ inputs.azureRegion }}
          echo UserID ${{ steps.userid.outputs.objectid }}
          #echo Tags ${{ inputs.tags }}
